#include<iostream>
using namespace std;

#define max 5

struct queue {
    int rear, front;
    int qu[max];
}q;

void insert(int data) {
    if (q.rear == max - 1) {
        cout << "Queue is overflow" << endl;
    } else {
        if (q.front == -1 && q.rear == -1) {
            q.front = 0;
        }
        q.qu[++q.rear] = data; // Increment rear before assigning
    }
}

void pop() {
    if (q.front == -1) {
        cout << "Queue is empty" << endl;
    } else {
        cout << "Deleted element is " << q.qu[q.front] << endl;
        if (q.front == q.rear) { // If the queue becomes empty
            q.front = -1;
            q.rear = -1;
        } else {
            q.front++; // Increment front
        }
    }
}

void display() {
    if (q.front == -1) {
        cout << "Queue is empty" << endl;
    } else {
        cout << "Queue elements: ";
        for (int i = q.front; i <= q.rear; i++) {
            cout << q.qu[i] << " ";
        }
        cout << endl;
    }
}

int main() {
    int choice;
     q.front=-1,q.rear=-1;
    do {
        cout << "1. Insert\n2. Pop\n3. Display\n4. Exit\n";
        cin >> choice;
        switch (choice) {
            case 1: {
                int n;
                cout << "Enter element to insert: ";
                cin >> n;
                insert(n);
                break;
            }
            case 2:
                pop();
                break;
            case 3:
                display();
                break;
            case 4:
                cout << "Exiting..." << endl;
                break;
            default:
                cout << "Invalid choice" << endl;
        }
    } while (choice != 4);

    return 0;
}
